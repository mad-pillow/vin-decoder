{"version":3,"sources":["components/App/Header/Header.jsx","components/Shared/InfoBlock/InfoBlock.jsx","components/Shared/Spinner/Spinner.jsx","components/App/Main/VinCodeBlock/VinCodeBlock.jsx","components/Shared/FetchMessageWindow/FetchMessageWindow.jsx","components/App/Main/BaseBlock/BaseBlock.jsx","components/App/Variables/Variables.jsx","services/VinService.js","components/App/Variables/VariableDetails/VariableDetails.jsx","components/App/Main/Main.jsx","components/App/App.jsx","index.js"],"names":["Header","toggleNavMenu","state","isMenuClose","setState","closeNavMenu","openMenuClassName","this","document","body","style","overflow","className","to","onClick","Component","InfoBlock","props","infoValuesRows","tableHeaders","navigate","useNavigate","info","isNavigable","rowIsClickable","Array","isArray","Object","keys","map","key","index","infoValuesRow","infoValues","values","infoValue","dangerouslySetInnerHTML","__html","linkId","Id","Spinner","VinCodeBlock","handleSubmit","e","preventDefault","test","currentVIN","isVinCorrect","handleActiveVIN","VINListClone","VINList","vinToBeDeleted","length","includes","filter","vin","handleCarDataList","unshift","splice","handleVINList","VINInputRef","current","focus","value","handleChange","target","toUpperCase","createRef","VINNodesList","VINNodeText","handleVINListChoose","vinPlaceholder","onSubmit","type","ref","minLength","maxLength","placeholder","onChange","FetchMessageWindow","fetchMessage","isFetching","BaseBlock","preventCarInfoFetchMsg","useLayoutEffect","InfoBlockContainer","carDataFetching","infoCarData","fetchCarDataMessage","Variables","infoVariables","variablesFetching","fetchVariablesMessage","preventVariablesFetchMsg","VinService","API_URL","getCarData","bind","getVariables","url","a","fetch","data","ok","Error","status","json","getData","carData","processedCarData","Results","car","Variable","Value","item","message","Message","variables","processedVariablesData","variable","ID","Name","Description","id","variableDetails","forEach","Number","assign","VariableDetails","useParams","useState","setVariable","fetchingVariable","setFetchingVariable","useEffect","vinService","getVariableDetails","then","variableItems","Main","exact","path","element","App","handleVariables","handleCarInfo","carDataListClone","JSON","parse","stringify","carDataList","localStorage","setItem","activeVIN","listItemId","dataset","getItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.518b4466.chunk.js","sourcesContent":["import \"./header.scss\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isMenuClose: true,\n    }\n  }\n\n  toggleNavMenu = () => {\n    if (this.state.isMenuClose) {\n      this.setState({ isMenuClose: false });\n    } else {\n      this.setState({ isMenuClose: true });\n    }\n  }\n\n  closeNavMenu = () => {\n      this.setState({ isMenuClose: true });\n  }\n\n  render() {\n    let openMenuClassName = \"\";\n\n    if (this.state.isMenuClose) {\n      openMenuClassName = \" header__nav-container--closed\";\n      document.body.style.overflow = \"auto\";\n    } else {\n      document.body.style.overflow = \"hidden\";\n    }\n\n    return (\n      <header className=\"header\">\n        <div className=\"header__logo-container\">\n          <Link className=\"header__logo-link\" to=\"/\">VIN DECODER</Link>\n        </div>\n        <nav className={`header__nav-container${openMenuClassName}`} onClick={this.closeNavMenu}>\n          <ul className=\"header__nav-list\">\n            <li className=\"header__nav-item\"><Link to=\"/\" className=\"header__nav-link\">Main page</Link></li>\n            <li className=\"header__nav-item\"><Link to=\"/variables\" className=\"header__nav-link\">Variables</Link></li>\n          </ul>\n        </nav>\n        <div className=\"header__menu-btn-container\" onClick={this.toggleNavMenu}>\n          <span className=\"header__menu-btn\"></span>\n        </div>\n      </header>\n    )\n  }\n}","import './infoBlock.scss';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function InfoBlock( props ) {\n  let tableHeaders = [\"Header 1\", \"Header 2\"];\n  let infoValuesRows = [];\n  let navigate = useNavigate();\n\n  const { info, isNavigable } = props;\n  const rowIsClickable = isNavigable ? \" info__row--clickable\" : \"\";\n\n  function navigateTo(linkId) {\n    if (!isNavigable) return;\n\n    navigate(linkId);\n  }\n\n  if (!info && !Array.isArray(info)) {\n    return (\n      <p>If you like to get description of a car by its VIN code enter the code above</p>\n    )\n  } else {\n    tableHeaders = Object.keys(info[0]).map((key, index) => {\n      return (\n        <th key={index} className=\"info__header\">{key}</th>\n      )\n    });\n  }\n\n  infoValuesRows = info.map((infoValuesRow, index) => {\n    const infoValues = Object.values(infoValuesRow).map((infoValue, index) => {\n      return <td className=\"info__data\" key={index} dangerouslySetInnerHTML={{ __html: infoValue }}></td>\n    });\n    \n    return (\n      <tr className={`info__row${rowIsClickable}`} key={index} onClick={() => { navigateTo(`${infoValuesRow.Id}`) }}>\n        {infoValues}\n      </tr>\n    )\n  })\n\n  return (\n    <div className=\"info__container\">\n      <table className=\"info__table\">\n        <tbody>\n          <tr className=\"info__row\">\n            {tableHeaders}\n          </tr>\n          {infoValuesRows}\n        </tbody>\n      </table>\n    </div>\n  )\n}","import \"./spinner.scss\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"spinner__container\">\n      <div className=\"loadingio-spinner-dual-ball-4ss68ps5fu9\">\n        <div className=\"ldio-np3unrjzfxn\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  )\n}","import './vinCodeBlock.scss';\nimport React, { Component, createRef } from 'react';\n\nexport default class VinCodeBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.VINInputRef = createRef();\n\n    this.state = {\n      currentVIN: \"\",\n      isVinCorrect: true,\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const vinRegex = /^([A-Z0-9])*$/gi;\n    if (vinRegex.test(this.state.currentVIN)) {\n      this.setState({ isVinCorrect: true });\n\n      this.props.handleActiveVIN(this.state.currentVIN);\n\n      let VINListClone = [...this.props.VINList];\n      const vinToBeDeleted = VINListClone[VINListClone.length - 1];\n\n      if (this.props.VINList.includes(this.state.currentVIN)) {\n        VINListClone = VINListClone.filter(vin => vin !== this.state.currentVIN);\n      } else {\n        this.props.handleCarDataList(vinToBeDeleted);\n      }\n\n      VINListClone.unshift(this.state.currentVIN);\n      VINListClone.splice(5);\n\n      this.props.handleVINList(VINListClone);\n    } else {\n      this.setState({ isVinCorrect: false });\n    }\n\n    this.VINInputRef.current.focus();\n    this.VINInputRef.current.value = \"\";\n  }\n\n  handleChange = (e) => {\n    this.setState({ currentVIN: e.target.value.toUpperCase() });\n  }\n\n  render() {\n    const VINNodesList = this.props.VINList.map((vin, index) => {\n      const VINNodeText = vin ? vin : \"Empty slot\";\n      \n      return <li\n        key={index}\n        data-value={VINNodeText}\n        className=\"vin-code__history-item\"\n        onClick={(e) => {\n          this.props.handleVINListChoose(e);\n          this.setState({ isVinCorrect: true });\n        }\n  }> { VINNodeText }</li >;\n    });\n\n    const vinPlaceholder = this.state.isVinCorrect ? \"Enter VIN\" : \"Letters and Digits only!\";\n\n\n    return (\n      <div className=\"vin-code__container\">\n        <div className=\"vin-code__request-block\">\n          <form className=\"vin-code__request-form\" onSubmit={this.handleSubmit}>\n            <div>\n              <input type=\"text\"\n                className=\"vin-code__request-input\"\n                ref={this.VINInputRef}\n                minLength=\"17\"\n                maxLength=\"17\"\n                placeholder={vinPlaceholder}\n                onChange={this.handleChange} />\n            </div>\n            <button type=\"submit\" className=\"vin-code__request-btn\">Request VIN</button>\n          </form>\n        </div>\n        <div className=\"vin-code__history-block\">\n          <ul className=\"vin-code__history-list\">\n            {VINNodesList}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n} ","import \"./fecthMessageWindow.scss\";\n\nexport default function FetchMessageWindow({ fetchMessage, isFetching}) {\n  if (isFetching === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"fetch-message__container\">\n      <p className=\"fetch-message__message\">{fetchMessage}</p>\n    </div>\n  )\n}","import InfoBlock from \"../../../Shared/InfoBlock/InfoBlock\";\nimport Spinner from \"../../../Shared/Spinner/Spinner\";\nimport VinCodeBlock from \"../VinCodeBlock/VinCodeBlock\";\nimport FetchMessageWindow from \"../../../Shared/FetchMessageWindow/FetchMessageWindow\";\nimport { useLayoutEffect } from \"react\";\n\nexport default function BaseBlock(props) {\n\n  const { preventCarInfoFetchMsg } = props;\n\n  useLayoutEffect(() => {\n    return () => {\n      preventCarInfoFetchMsg();\n    }\n  }, [preventCarInfoFetchMsg]);\n\n  return (\n    <>\n      <VinCodeBlock {...props} />\n      <InfoBlockContainer {...props}/>\n    </>\n  )\n}\n\nfunction InfoBlockContainer(props) {\n  if (props.carDataFetching) {\n    return (\n      <Spinner/>\n    )\n  }\n\n  return (\n    <>\n      <InfoBlock info={props.infoCarData} />\n      <FetchMessageWindow fetchMessage={props.fetchCarDataMessage} isFetching={props.carDataFetching} />\n    </>\n  )\n}","import './variables.scss';\nimport InfoBlock from '../../Shared/InfoBlock/InfoBlock';\nimport Spinner from '../../Shared/Spinner/Spinner';\nimport FetchMessageWindow from '../../Shared/FetchMessageWindow/FetchMessageWindow';\nimport { useLayoutEffect } from 'react';\n\nexport default function Variables({ infoVariables, variablesFetching, fetchVariablesMessage, preventVariablesFetchMsg }) {\n  useLayoutEffect(() => {\n    return () => {\n      preventVariablesFetchMsg();\n    }\n  }, [preventVariablesFetchMsg]);\n\n  if (variablesFetching) {\n    return (\n      <Spinner/>\n    )\n  }\n\n  return (\n    <>\n      <h2 className=\"page-title\">You can find the list of all available VIN decryption variables below:</h2>\n      <InfoBlock info={infoVariables} isNavigable={true} />\n      <FetchMessageWindow fetchMessage={fetchVariablesMessage} isFetching={variablesFetching}/>\n    </>\n  )\n}\n","class VinService {\n  constructor() {\n    this.API_URL = \"https://vpic.nhtsa.dot.gov/api/vehicles/\";\n\n    this.getCarData = this.getCarData.bind(this);\n    this.getVariables = this.getVariables.bind(this);\n  }\n\n  async getData(url) {\n    const data = await fetch(url);\n\n    if (!data.ok) {\n      throw new Error(`Cannot fetch data from ${url}. Status - ${data.status}`);\n    }\n\n    return await data.json();\n  }\n\n  async getCarData(vin) {\n    const carData = await this.getData(`${this.API_URL}decodevin/${vin}?format=json`);\n\n    let processedCarData = carData.Results.map((car) => {\n      const processedCar = { Variable: car.Variable, Value: car.Value };\n\n      return processedCar;\n    });\n\n    processedCarData = processedCarData.filter((item) => item.Value);\n\n    return { message: carData.Message, carData: processedCarData };\n  }\n\n  async getVariables() {\n    const variables = await this.getData(`${this.API_URL}getvehiclevariablelist?format=json`);\n\n    const processedVariablesData = variables.Results.map((variable) => {\n      return { Id: variable.ID, Name: variable.Name, Description: variable.Description };\n    });\n\n    return { message: variables.Message, variables: processedVariablesData };\n  }\n\n  async getVariableDetails(id) {\n    const variables = await this.getData(`${this.API_URL}getvehiclevariablelist?format=json`);\n    let variableDetails = {};\n    variables.Results.forEach((item) => {\n      if (item.ID === Number(id)) {\n        variableDetails = Object.assign({}, item);\n        return;\n      }\n    });\n\n    return variableDetails;\n  }\n}\n\nexport default VinService;\n","import './variableDetails.scss';\nimport { useParams } from \"react-router-dom\"\nimport VinService from '../../../../services/VinService';\nimport { useState, useEffect } from 'react';\nimport Spinner from '../../../Shared/Spinner/Spinner';\n\nexport default function VariableDetails({ infoVariables, preventVariablesFetchMsg }) {\n  const { id } = useParams();\n  const [variable, setVariable] = useState({});\n  const [fetchingVariable, setFetchingVariable] = useState(false);\n\n  useEffect((vin) => {\n    const vinService = new VinService();\n    setFetchingVariable(true);\n    \n    vinService.getVariableDetails(id).then(data => {\n      setVariable(data);\n      setFetchingVariable(false);\n    })\n  }, [id]);\n\n  const variableKeys = Object.keys(variable);\n  const variableItems = variableKeys.map((key, index) => {\n    return (\n      <tr className=\"details__row\" key={index}>\n        <td className=\"details__data\">{key}</td>\n        <td className=\"details__data\" dangerouslySetInnerHTML={{__html: variable[key]}}></td>\n      </tr>\n    )\n  })\n\n  if (fetchingVariable) {\n    return (\n      <Spinner/>\n    )\n  }\n\n  return (\n    <>\n      <h2 className=\"page-title\">{`Details for the variable with Id ${id} as follows:`}</h2>\n      <div className=\"details__container\">\n        <table className=\"details__table\">\n          <tbody>\n            {variableItems}\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n}","import './main.scss';\nimport BaseBlock from './BaseBlock/BaseBlock';\nimport Variables from '../Variables/Variables';\nimport { Routes, Route } from \"react-router-dom\";\nimport VariableDetails from '../Variables/VariableDetails/VariableDetails';\n\nexport default function Main(props) {\n  return (\n    <main className=\"main-container\">\n      <Routes>\n        <Route exact path=\"/\" element={<BaseBlock {...props}/>} />\n        <Route exact path=\"/variables\" element={<Variables {...props} />} />\n        <Route exact path=\"/variables/:id\" element={<VariableDetails {...props}/>}/>\n      </Routes>\n    </main>\n  )\n}","import \"./app.scss\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\nimport VinService from \"../../services/VinService\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.vinService = new VinService();\n    this.handleVariables();\n\n    this.state = {\n      activeVIN: \"\",\n      VINList: JSON.parse(localStorage.getItem(\"VINList\")) || [null, null, null, null, null],\n      carDataList: JSON.parse(localStorage.getItem(\"CarDataList\")) || {},\n      fetchCarDataMessage: \"\",\n      carDataFetching: null,\n      variables: [],\n      fetchVariablesMessage: \"\",\n      variablesFetching: null,\n    }\n  }\n\n  handleVariables = () => {\n    this.setState({ variablesFetching: true });\n    \n    this.vinService.getVariables().then(data => {\n      this.setState({variables: data.variables, fetchVariablesMessage: data.message, variablesFetching: false});\n    });\n  }\n\n  preventVariablesFetchMsg = () => {\n    this.setState({ variablesFetching: null });\n  }\n\n  handleCarInfo = (vin) => {\n    if (this.state.VINList.includes(vin)) {\n      return;\n    }\n\n    this.setState({ carDataFetching: true });\n\n    this.vinService.getCarData(vin).then(data => {\n      let carDataListClone = JSON.parse(JSON.stringify(this.state.carDataList));\n\n      carDataListClone[vin] = data.carData;\n      localStorage.setItem(\"CarDataList\", JSON.stringify(carDataListClone));\n      this.setState({ carDataList: carDataListClone, fetchCarDataMessage: data.message, carDataFetching: false });\n    });\n  }\n\n  preventCarInfoFetchMsg = () => {\n    this.setState({ carDataFetching: null });\n  }\n\n  handleCarDataList = (vin) => {\n    let carDataListClone = JSON.parse(JSON.stringify(this.state.carDataList));\n    delete carDataListClone[vin];\n    this.setState({ carDataList: carDataListClone });\n  }\n\n  handleVINList = (VINListClone) => {\n    localStorage.setItem(\"VINList\", JSON.stringify(VINListClone));\n    this.setState({ VINList: VINListClone });\n  }\n\n  handleActiveVIN = (activeVIN) => {\n    this.setState({ activeVIN });\n    this.handleCarInfo(activeVIN);\n  }\n\n  handleVINListChoose = (e) => {\n    const listItemId = e.target.dataset.value;\n    let VINListClone = this.state.VINList;\n\n    if (!listItemId || listItemId === \"Empty slot\") {\n      return;\n    }\n\n    VINListClone = VINListClone.filter(item => item !== listItemId);\n    VINListClone.unshift(listItemId);\n\n    localStorage.setItem(\"VINList\", JSON.stringify(VINListClone));\n    this.setState({ VINList: VINListClone });\n    this.handleActiveVIN(VINListClone[0]);\n  }\n  \n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header />\n        <Main\n          infoCarData={this.state.carDataList[this.state.activeVIN]}\n          infoVariables={this.state.variables}\n          fetchVariablesMessage={this.state.fetchVariablesMessage}\n          fetchCarDataMessage={this.state.fetchCarDataMessage}\n          variablesFetching={this.state.variablesFetching}\n          carDataFetching={this.state.carDataFetching}\n          handleVINList={this.handleVINList}\n          handleActiveVIN={this.handleActiveVIN}\n          handleVINListChoose={this.handleVINListChoose}\n          VINList={this.state.VINList}\n          handleCarDataList={this.handleCarDataList}\n          preventCarInfoFetchMsg={this.preventCarInfoFetchMsg}\n          preventVariablesFetchMsg={this.preventVariablesFetchMsg}\n          />\n      </div>\n    );\n  }  \n}\n\nexport default App;","import \"./index.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}