{"version":3,"sources":["components/App/Header/index.js","components/App/Header/Header.jsx","components/Shared/InfoBlock/index.js","components/Shared/InfoBlock/InfoBlock.jsx","components/Shared/Spinner/index.js","components/Shared/Spinner/Spinner.jsx","services/VinService.js","contexts/VehicleContext.js","components/App/VinCodeBlock/index.js","components/App/VinCodeBlock/VinCodeBlock.jsx","components/Shared/FetchMessageWindow/index.js","components/Shared/FetchMessageWindow/FetchMessageWindow.jsx","components/App/BaseBlock/BaseBlock.jsx","components/App/BaseBlock/index.js","contexts/VariablesContext.js","components/App/Variables/index.js","components/App/Variables/Variables.jsx","components/App/Variables/VariableDetails/index.js","components/App/Variables/VariableDetails/VariableDetails.jsx","components/App/App.jsx","components/App/index.js","index.js"],"names":["Header","toggleNavMenu","state","isMenuClose","setState","closeNavMenu","openMenuClassName","this","document","body","style","overflow","className","to","onClick","Component","InfoBlock","infoValuesRows","info","isNavigable","tableHeaders","navigate","useNavigate","rowIsClickable","Array","isArray","Object","keys","map","key","index","infoValuesRow","infoValues","values","infoValue","dangerouslySetInnerHTML","__html","linkId","Id","Spinner","VinService","API_URL","getCarData","bind","getVariables","url","a","fetch","data","ok","Error","status","json","vin","getData","carData","processedCarData","Results","car","Variable","Value","filter","item","message","Message","variables","processedVariablesData","variable","ID","Name","Description","id","variableDetails","forEach","Number","assign","vinService","VehicleContext","React","createContext","useVehicleContext","useContext","VehicleProvider","children","storedVinListData","JSON","parse","localStorage","getItem","storedCarDataListData","useState","activeVin","setActiveVin","vinList","setVinList","carDataList","setCarDataList","fetchCarDataMessage","setFetchCarDataMessage","isCarDataFetching","setIsCarDataFetching","_handleActiveVin","includes","then","carDataListClone","stringify","setItem","_handleCarInfo","Provider","value","handleVinSubmit","vinListClone","vinToBeDeleted","length","_handleCarDataList","unshift","splice","_handleVinList","handleVinListChoise","e","listItemId","target","dataset","closeFetchCarDataMessage","VinCodeBlock","vinInputRef","createRef","currentVin","setCurrentVin","isVinCorrect","setIsVinCorrect","vinChangeRegex","vinSubmitRegex","vinNodesList","vinNodeText","vinInputClassName","onSubmit","preventDefault","current","focus","type","ref","minLength","maxLength","placeholder","onChange","toUpperCase","test","disabled","FetchMessageWindow","fetchMessage","isFetching","closeWindow","InfoBlockContainer","BaseBlock","VariablesContext","VariablesProvider","storedVariablesData","setVariables","fetchVariablesMessage","setFetchVariablesMessage","isVariablesFetching","setIsVariablesFetching","useEffect","closeFetchVariablesMessage","Variables","VariableDetails","useParams","setVariable","fetchingVariable","setFetchingVariable","getVariableDetails","variableItems","App","removeItem","exact","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.26f3a499.chunk.js","sourcesContent":["import Header from './Header';\n\nexport default Header;\n","import './header.scss';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isMenuClose: true,\n    };\n  }\n\n  toggleNavMenu = () => {\n    if (this.state.isMenuClose) {\n      this.setState({ isMenuClose: false });\n    } else {\n      this.setState({ isMenuClose: true });\n    }\n  };\n\n  closeNavMenu = () => {\n    this.setState({ isMenuClose: true });\n  };\n\n  render() {\n    let openMenuClassName = '';\n\n    if (this.state.isMenuClose) {\n      document.body.style.overflow = 'auto';\n    } else {\n      openMenuClassName = ' header__nav-container--visible';\n      document.body.style.overflow = 'hidden';\n    }\n\n    return (\n      <header className=\"header\">\n        <div className=\"header__logo-container\">\n          <Link className=\"header__logo-link\" to=\"/\">\n            VIN DECODER\n          </Link>\n        </div>\n        <nav className={`header__nav-container${openMenuClassName}`} onClick={this.closeNavMenu}>\n          <ul className=\"header__nav-list\">\n            <li className=\"header__nav-item\">\n              <Link to=\"/\" className=\"header__nav-link\">\n                Main page\n              </Link>\n            </li>\n            <li className=\"header__nav-item\">\n              <Link to=\"/variables\" className=\"header__nav-link\">\n                Variables\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"header__menu-btn-container\" onClick={this.toggleNavMenu}>\n          <span className=\"header__menu-btn\"></span>\n        </div>\n      </header>\n    );\n  }\n}\n","import InfoBlock from './InfoBlock';\n\nexport default InfoBlock;\n","import './infoBlock.scss';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function InfoBlock({ info, isNavigable }) {\n  let tableHeaders = ['Header 1', 'Header 2'];\n  let infoValuesRows = [];\n  let navigate = useNavigate();\n\n  const rowIsClickable = isNavigable ? ' info__row--clickable' : '';\n\n  function navigateTo(linkId) {\n    if (!isNavigable) return;\n\n    navigate(linkId);\n  }\n\n  if (!info && !Array.isArray(info)) {\n    return <p>If you like to get description of a car by its VIN code enter the code above</p>;\n  } else {\n    tableHeaders = Object.keys(info[0]).map((key, index) => {\n      return (\n        <th key={index} className=\"info__header\">\n          {key}\n        </th>\n      );\n    });\n  }\n\n  infoValuesRows = info.map((infoValuesRow, index) => {\n    const infoValues = Object.values(infoValuesRow).map((infoValue, index) => {\n      return <td className=\"info__data\" key={index} dangerouslySetInnerHTML={{ __html: infoValue }}></td>;\n    });\n\n    return (\n      <tr\n        className={`info__row${rowIsClickable}`}\n        key={index}\n        onClick={() => {\n          navigateTo(`${infoValuesRow.Id}`);\n        }}\n      >\n        {infoValues}\n      </tr>\n    );\n  });\n\n  return (\n    <div className=\"info__container\">\n      <table className=\"info__table\">\n        <tbody>\n          <tr className=\"info__row\">{tableHeaders}</tr>\n          {infoValuesRows}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import './spinner.scss';\n\nexport default function Spinner() {\n  return (\n    <div className=\"spinner__container\">\n      <div className=\"loadingio-spinner-dual-ball-4ss68ps5fu9\">\n        <div className=\"ldio-np3unrjzfxn\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","class VinService {\n  constructor() {\n    this.API_URL = 'https://vpic.nhtsa.dot.gov/api/vehicles/';\n\n    this.getCarData = this.getCarData.bind(this);\n    this.getVariables = this.getVariables.bind(this);\n  }\n\n  async getData(url) {\n    const data = await fetch(url);\n\n    if (!data.ok) {\n      throw new Error(`Cannot fetch data from ${url}. Status - ${data.status}`);\n    }\n\n    return await data.json();\n  }\n\n  async getCarData(vin) {\n    const carData = await this.getData(`${this.API_URL}decodevin/${vin}?format=json`);\n\n    let processedCarData = carData.Results.map((car) => {\n      const processedCar = { Variable: car.Variable, Value: car.Value };\n\n      return processedCar;\n    });\n\n    processedCarData = processedCarData.filter((item) => item.Value);\n\n    return { message: carData.Message, carData: processedCarData };\n  }\n\n  async getVariables() {\n    const variables = await this.getData(`${this.API_URL}getvehiclevariablelist?format=json`);\n\n    const processedVariablesData = variables.Results.map((variable) => {\n      return { Id: variable.ID, Name: variable.Name, Description: variable.Description };\n    });\n\n    return { message: variables.Message, variables: processedVariablesData };\n  }\n\n  async getVariableDetails(id) {\n    const variables = await this.getData(`${this.API_URL}getvehiclevariablelist?format=json`);\n    let variableDetails = {};\n    variables.Results.forEach((item) => {\n      if (item.ID === Number(id)) {\n        variableDetails = Object.assign({}, item);\n        return;\n      }\n    });\n\n    return variableDetails;\n  }\n}\n\nconst vinService = new VinService();\n\nexport default vinService;\n","import React, { useState, useContext } from 'react';\nimport vinService from '../services/VinService';\n\nconst VehicleContext = React.createContext();\n\nexport const useVehicleContext = () => {\n  return useContext(VehicleContext);\n};\n\nexport function VehicleProvider({ children }) {\n  const storedVinListData = JSON.parse(localStorage.getItem('vinList'));\n  const storedCarDataListData = JSON.parse(localStorage.getItem('carDataList'));\n\n  const [activeVin, setActiveVin] = useState('');\n  const [vinList, setVinList] = useState(storedVinListData || [null, null, null, null, null]);\n  const [carDataList, setCarDataList] = useState(storedCarDataListData || {});\n  const [fetchCarDataMessage, setFetchCarDataMessage] = useState('');\n  const [isCarDataFetching, setIsCarDataFetching] = useState(null);\n\n  const _handleCarInfo = (vin) => {\n    if (vinList.includes(vin)) {\n      return;\n    }\n\n    setIsCarDataFetching(true);\n\n    vinService.getCarData(vin).then((data) => {\n      let carDataListClone = JSON.parse(JSON.stringify(carDataList));\n\n      carDataListClone[vin] = data.carData;\n      localStorage.setItem('carDataList', JSON.stringify(carDataListClone));\n      setCarDataList(carDataListClone);\n      setFetchCarDataMessage(data.message);\n      setIsCarDataFetching(false);\n    });\n  };\n\n  const _handleActiveVin = (vin) => {\n    setActiveVin(vin);\n    _handleCarInfo(vin);\n  };\n\n  const _handleCarDataList = (vin) => {\n    let carDataListClone = JSON.parse(JSON.stringify(carDataList));\n    delete carDataListClone[vin];\n    setCarDataList(carDataListClone);\n  };\n\n  const _handleVinList = (vinListClone) => {\n    localStorage.setItem('vinList', JSON.stringify(vinListClone));\n    setVinList(vinListClone);\n  };\n\n  const handleVinListChoise = (e) => {\n    const listItemId = e.target.dataset.value;\n    let vinListClone = vinList;\n\n    if (!listItemId || listItemId === 'Empty slot') {\n      return;\n    }\n\n    vinListClone = vinListClone.filter((item) => item !== listItemId);\n    vinListClone.unshift(listItemId);\n\n    localStorage.setItem('vinList', JSON.stringify(vinListClone));\n    setVinList(vinListClone);\n\n    _handleActiveVin(vinListClone[0]);\n  };\n\n  const handleVinSubmit = (vin) => {\n    _handleActiveVin(vin);\n\n    let vinListClone = [...vinList];\n    const vinToBeDeleted = vinListClone[vinListClone.length - 1];\n\n    if (vinList.includes(vin)) {\n      vinListClone = vinListClone.filter((item) => item !== vin);\n    } else {\n      _handleCarDataList(vinToBeDeleted);\n    }\n\n    vinListClone.unshift(vin);\n    vinListClone.splice(5);\n\n    _handleVinList(vinListClone);\n  };\n\n  const closeFetchCarDataMessage = () => {\n    setIsCarDataFetching(null);\n  };\n\n  return (\n    <VehicleContext.Provider\n      value={{\n        fetchCarDataMessage,\n        isCarDataFetching,\n        activeVin,\n        carDataList,\n        vinList,\n        handleVinSubmit,\n        handleVinListChoise,\n        closeFetchCarDataMessage,\n      }}>\n      {children}\n    </VehicleContext.Provider>\n  );\n}\n","import VinCodeBlock from './VinCodeBlock';\n\nexport default VinCodeBlock;\n","import './vinCodeBlock.scss';\nimport React, { createRef, useState } from 'react';\nimport { useVehicleContext } from '../../../contexts/VehicleContext';\n\nexport default function VinCodeBlock() {\n  const vinInputRef = createRef();\n  const [currentVin, setCurrentVin] = useState('');\n  const [isVinCorrect, setIsVinCorrect] = useState(true);\n\n  const { vinList, handleVinSubmit, handleVinListChoise } = useVehicleContext();\n  const vinChangeRegex = /^[A-Z0-9]*$/gi;\n  const vinSubmitRegex = /^[A-Z0-9]{17}$/gi;\n\n  const handleChange = (e) => {\n    const target = e.target;\n    let { value } = target;\n    target.value = value = value.toUpperCase();\n\n    const vinRegex = value.length > 17 ? vinSubmitRegex : vinChangeRegex;\n\n    if (vinRegex.test(value)) {\n      setIsVinCorrect(true);\n      setCurrentVin(value);\n      return;\n    }\n\n    setIsVinCorrect(false);\n  };\n\n  const vinNodesList = vinList.map((vin, index) => {\n    const vinNodeText = vin ? vin : 'Empty slot';\n\n    return (\n      <li\n        key={index}\n        data-value={vinNodeText}\n        className=\"vin-code__history-item\"\n        onClick={(e) => {\n          handleVinListChoise(e);\n          setIsVinCorrect(true);\n        }}>\n        {vinNodeText}\n      </li>\n    );\n  });\n\n  const vinInputClassName = isVinCorrect\n    ? 'vin-code__request-form'\n    : 'vin-code__request-form vin-code__request-form--wrong';\n\n  return (\n    <div className=\"vin-code__container\">\n      <div className=\"vin-code__request-block\">\n        <form\n          className={vinInputClassName}\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (currentVin && currentVin.length === 17) {\n              handleVinSubmit(currentVin);\n              vinInputRef.current.focus();\n              vinInputRef.current.value = '';\n            }\n          }}>\n          <input\n            type=\"text\"\n            className=\"vin-code__request-input\"\n            ref={vinInputRef}\n            minLength=\"17\"\n            maxLength=\"17\"\n            placeholder=\"Enter VIN code\"\n            onChange={handleChange}\n          />\n          <button type=\"submit\" className=\"vin-code__request-btn\" disabled={!isVinCorrect}>\n            Request VIN\n          </button>\n        </form>\n      </div>\n      <div className=\"vin-code__history-block\">\n        <ul className=\"vin-code__history-list\">{vinNodesList}</ul>\n      </div>\n    </div>\n  );\n}\n","import FetchMessageWindow from './FetchMessageWindow';\n\nexport default FetchMessageWindow;\n","import './fecthMessageWindow.scss';\n\nexport default function FetchMessageWindow({ fetchMessage, isFetching, closeWindow }) {\n  if (isFetching === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"fetch-message__container\" onClick={closeWindow}>\n      <span className=\"fetch-message__close-btn\">&#10060;</span>\n      <p className=\"fetch-message__message\">{fetchMessage}</p>\n    </div>\n  );\n}\n","import InfoBlock from '../../Shared/InfoBlock';\nimport Spinner from '../../Shared/Spinner';\nimport VinCodeBlock from '../VinCodeBlock';\nimport FetchMessageWindow from '../../Shared/FetchMessageWindow';\nimport { useVehicleContext } from '../../../contexts/VehicleContext';\n\nexport default function BaseBlock() {\n  return (\n    <>\n      <VinCodeBlock />\n      <InfoBlockContainer />\n    </>\n  );\n}\n\nfunction InfoBlockContainer() {\n  const { fetchCarDataMessage, isCarDataFetching, activeVin, carDataList, closeFetchCarDataMessage } =\n    useVehicleContext();\n\n  if (isCarDataFetching) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      <InfoBlock info={carDataList[activeVin]} isNavigable={false} />\n      <FetchMessageWindow\n        fetchMessage={fetchCarDataMessage}\n        isFetching={isCarDataFetching}\n        closeWindow={closeFetchCarDataMessage}\n      />\n    </>\n  );\n}\n","import BaseBlock from './BaseBlock';\n\nexport default BaseBlock;\n","import React, { useState, useContext, useEffect } from 'react';\nimport vinService from '../services/VinService';\n\nconst VariablesContext = React.createContext();\n\nexport const useVariablesContext = () => {\n  return useContext(VariablesContext);\n};\n\nexport function VariablesProvider({ children }) {\n  const storedVariablesData = JSON.parse(localStorage.getItem('storedVariablesData'));\n\n  const [variables, setVariables] = useState(storedVariablesData && storedVariablesData.variables);\n  const [fetchVariablesMessage, setFetchVariablesMessage] = useState(\n    storedVariablesData && storedVariablesData.fetchVariablesMessage\n  );\n  const [isVariablesFetching, setIsVariablesFetching] = useState(null);\n\n  useEffect(() => {\n    if (!storedVariablesData) {\n      setIsVariablesFetching(true);\n\n      vinService.getVariables().then((data) => {\n        setVariables(data.variables);\n        setFetchVariablesMessage(data.message);\n        setIsVariablesFetching(false);\n        localStorage.setItem(\n          'storedVariablesData',\n          JSON.stringify({\n            variables: variables,\n            fetchVariablesMessage: fetchVariablesMessage,\n          })\n        );\n      });\n    }\n  }, [storedVariablesData, variables, fetchVariablesMessage]);\n\n  const closeFetchVariablesMessage = () => {\n    setIsVariablesFetching(null);\n  };\n\n  return (\n    <VariablesContext.Provider\n      value={{ variables, fetchVariablesMessage, isVariablesFetching, closeFetchVariablesMessage }}>\n      {children}\n    </VariablesContext.Provider>\n  );\n}\n","import Variables from './Variables';\n\nexport default Variables;\n","import './variables.scss';\nimport InfoBlock from '../../Shared/InfoBlock';\nimport Spinner from '../../Shared/Spinner';\nimport FetchMessageWindow from '../../Shared/FetchMessageWindow';\nimport { useVariablesContext } from '../../../contexts/VariablesContext';\n\nexport default function Variables() {\n  const { variables, fetchVariablesMessage, isVariablesFetching, closeFetchVariablesMessage } = useVariablesContext();\n\n  if (isVariablesFetching) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      <h2 className=\"page-title\">You can find the list of all available VIN decryption variables below:</h2>\n      <InfoBlock info={variables} isNavigable={true} />\n      <FetchMessageWindow\n        fetchMessage={fetchVariablesMessage}\n        isFetching={isVariablesFetching}\n        closeWindow={closeFetchVariablesMessage}\n      />\n    </>\n  );\n}\n","import VariableDetails from './VariableDetails';\n\nexport default VariableDetails;\n","import './variableDetails.scss';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Spinner from '../../../Shared/Spinner';\nimport vinService from '../../../../services/VinService';\n\nexport default function VariableDetails() {\n  const { id } = useParams();\n  const [variable, setVariable] = useState({});\n  const [fetchingVariable, setFetchingVariable] = useState(false);\n\n  useEffect(\n    (vin) => {\n      setFetchingVariable(true);\n\n      vinService.getVariableDetails(id).then((data) => {\n        setVariable(data);\n        setFetchingVariable(false);\n      });\n    },\n    [id]\n  );\n\n  const variableKeys = Object.keys(variable);\n  const variableItems = variableKeys.map((key, index) => {\n    return (\n      <tr className=\"details__row\" key={index}>\n        <td className=\"details__data\">{key}</td>\n        <td className=\"details__data\" dangerouslySetInnerHTML={{ __html: variable[key] }}></td>\n      </tr>\n    );\n  });\n\n  if (fetchingVariable) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      <h2 className=\"page-title\">{`Details for the variable with Id ${id} as follows:`}</h2>\n      <div className=\"details__container\">\n        <table className=\"details__table\">\n          <tbody>{variableItems}</tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","import './app.scss';\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport BaseBlock from './BaseBlock';\nimport Variables from './Variables';\nimport { Routes, Route } from 'react-router-dom';\nimport VariableDetails from './Variables/VariableDetails';\nimport { VariablesProvider } from '../../contexts/VariablesContext';\nimport { VehicleProvider } from '../../contexts/VehicleContext';\n\nclass App extends Component {\n  componentWillUnmount() {\n    localStorage.removeItem('storedVariablesData');\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header />\n        <main className=\"main-container\">\n          <Routes>\n            <Route exact path=\"/\" element={<VehicleProvider>{<BaseBlock />} </VehicleProvider>} />\n            <Route exact path=\"/variables\" element={<VariablesProvider>{<Variables />}</VariablesProvider>} />\n            <Route exact path=\"/variables/:id\" element={<VariableDetails />} />\n          </Routes>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import './index.scss';\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}